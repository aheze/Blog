<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Swift</title><subtitle>Learn app development with Swift and SwiftUI.</subtitle> <updated>2022-01-06T20:13:03-08:00</updated> <author> <name>Andrew Zheng</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 Andrew Zheng </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Basics</title><link href="/posts/SwiftUI-Basics/" rel="alternate" type="text/html" title="Basics" /><published>2022-01-04T20:21:00-08:00</published> <updated>2022-01-04T20:21:00-08:00</updated> <id>/posts/SwiftUI-Basics/</id> <content src="/posts/SwiftUI-Basics/" /> <author> <name>{"name"=>"Andrew Zheng", "link"=>"https://github.com/aheze"}</name> </author> <category term="Z Basic SwiftUI" /> <summary> Not written yet, will do soon </summary> </entry> <entry><title>Swift</title><link href="/posts/Swift/" rel="alternate" type="text/html" title="Swift" /><published>2022-01-04T20:19:00-08:00</published> <updated>2022-01-05T12:51:03-08:00</updated> <id>/posts/Swift/</id> <content src="/posts/Swift/" /> <author> <name>{"name"=>"Andrew Zheng", "link"=>"https://github.com/aheze"}</name> </author> <category term="Week 13" /> <summary> Overview Remember that SwiftUI code from the previous article? struct ContentView: View { var body: some View { Text("Hello, world!") .foregroundColor(Color.blue) } } That’s actually swift code. Pretty advanced swift code, but it’s still swift. View is a protocol The brackets {} are closures "Hello, world!" is a string .blue is a variable But for now, let... </summary> </entry> <entry><title>Challenge &amp;#35;1</title><link href="/posts/GettingStartedChallenge/" rel="alternate" type="text/html" title="Challenge &amp;#35;1" /><published>2022-01-03T20:19:00-08:00</published> <updated>2022-01-06T20:12:39-08:00</updated> <id>/posts/GettingStartedChallenge/</id> <content src="/posts/GettingStartedChallenge/" /> <author> <name>{"name"=>"Andrew Zheng", "link"=>"https://github.com/aheze"}</name> </author> <category term="Getting Started" /> <summary> Challenge #1 Make a view that looks like this: struct ContentView: View { var body: some View { /// your code goes here. } } </summary> </entry> <entry><title>SwiftUI</title><link href="/posts/SwiftUI/" rel="alternate" type="text/html" title="SwiftUI" /><published>2022-01-03T20:18:00-08:00</published> <updated>2022-01-06T20:12:39-08:00</updated> <id>/posts/SwiftUI/</id> <content src="/posts/SwiftUI/" /> <author> <name>{"name"=>"Andrew Zheng", "link"=>"https://github.com/aheze"}</name> </author> <category term="Getting Started" /> <summary> Overview You’ve probably never heard of SwiftUI before, so I’ll clear some things up. SwiftUI is a framework, which just means “developer tool.” SwiftUI is built using the Swift programming language, which we’ll go over in the next section. SwiftUI is the equivalent to HTML + CSS – you write and style views using it. Credit: Apple In SwiftUI, there are 2 main concepts: Views and Vi... </summary> </entry> <entry><title>Swift Playgrounds</title><link href="/posts/Swift-Playgrounds/" rel="alternate" type="text/html" title="Swift Playgrounds" /><published>2022-01-03T20:17:00-08:00</published> <updated>2022-01-05T12:51:03-08:00</updated> <id>/posts/Swift-Playgrounds/</id> <content src="/posts/Swift-Playgrounds/" /> <author> <name>{"name"=>"Andrew Zheng", "link"=>"https://github.com/aheze"}</name> </author> <category term="Getting Started" /> <summary> Overview Swift Playgrounds is a code editor that runs on iPad (download). So it’s an app that lets you make apps. The app Open it, and select a project (or create a new one with the plus button). The interface is split into 3 parts: Left: The sidebar, which shows all your files Center: The place where you write code Right: The app preview, which shows the result of your code At ... </summary> </entry> </feed>
